* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    list-style: none;
}

/* setting up css variables for toggle light/dark mode using css variables
*/
:root {
    --color-primary: #191d2b;
    --color-secondary: #27AE60;
    --color-white: #ffffff;
    --color-black: #000;
    --color-gray-0: #f8f8f8;
    --color-gray-1: #dbe1e8;
    --color-gray-2: #b2becd;
    --color-gray-3: #6c7983;
    --color-gray-4: #454e56;
    --color-gray-5: #2a2e35;
    --color-gray-6: #12181b;
    --br-sm-2: 14px;
    --box-shadow-1: 0 3px 15px rgba(0, 0, 0, .3); 
}

/* css variables to toggle light/dark */
body {
    background-color: var(--color-primary);
    font-family: 'Poppins', sans-serif;
    font-size: 1.1rem;
    color: var(--color-white);
    transition: all .4s ease-in-out;
}

/* anchor tag */
a {
    display: inline-block;
    text-decoration: none;
    color: inherit;
    font-family: inherit;
}

header {
    height: 100vh;
    color: var(--color-white);
    overflow: hidden;
}

/* sections */
section {
    height: 100vh;
    width: 100%;
    position: absolute;
    left: 0;
    top: 0;
    padding: 3rem 18rem;
}

/* default section is off screen */
.section {
    transform: translateY(-100%) scale(0);
    transition: all .4s ease-in-out;
    background-color: var(--color-primary);
}

/* display none as we want the section to appear only on click */
.section1 {
    display: none;
    transform: translateY(0) scale(1);
}

.section2 {
    display: none;
    transform: translateY(0) scale(1);
    background-color: royalblue;
}

.section3 {
    display: none;
    transform: translateY(0) scale(1);
    background-color: rosybrown;
}

.section4 {
    display: none;
    transform: translateY(0) scale(1);
    background-color: rebeccapurple;
}

.section5 {
    display: none;
    transform: translateY(0) scale(1);
    background-color: aquamarine;
}

/* active to control the section to appear on screen 
scaleY to only scale in y-direction when teh animation runs */
.active {
    display: block;
    animation: scaleAnimation 1s ease-in-out;
    @keyframes scaleAnimation {
        0% {
            transform: translateY(-100%) scaleY(0)
        }

        100% {
            transform: translateY(0) scaleY(1);
        }
    }
}

/* css for controls fixing it to not move and z-index to 10 to make sure
they stay on top (buttons) setting transform translateY to -50% to align it by column */

/* scss allow nesting of classes */

.controls {
    position: fixed;
    z-index: 10;
    top: 50%;
    right: 3%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    transform: translateY(-50%);
    .active-btn {
        background-color: var(--color-secondary);
        transition: all .4s ease-in-out;
        i {
            color: var(--color-white);
        }
    }
}

.control {
    padding: 1rem;
    cursor: pointer;
    background-color: var(--color-gray-4);
    width: 50px;
    height: 50px;
    border-radius: 50px;
    display: flex;
    justify-content: center;
    align-items: center;
    margin: .5rem 0;
    box-shadow: var(--box-shadow-1);
    i {
        font-size: 1.2rem;
        color: var(--color-gray-2);
        pointer-events: none;
        opacity: 1;
        transition: opacity .5s;
    }
    .expand-btn-txt {
        display: none;
        width: 100%;
        font-size: .75rem;
        justify-content: center;
        align-items: center;
        margin: 1rem;
    }
    &:hover {
        width: 100px;
        transition: width .7s;
        i {
            opacity: 0;
            display: none;
            transition: opacity .5s;
        }
        .expand-btn-txt {
            display: block;
            opacity: 1;
            transition: opacity .5s;
        }
    }
}








/* header styling */
.header-content {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    height: 100%;
    .left-header {
        display: flex;
        align-items: center;
        position: relative;
        /* z-index -1 to make the shape behind the profile photo
        clip path is used to generate a clipped custom shape */
        .h-shape {
            transition: all .4s ease-in-out;
            width: 65%;
            height: 100%;
            background-color: var(--color-secondary);
            position: absolute;
            left: 0;
            top: 0;
            z-index: -1;
            clip-path: polygon(0 0, 46% 0, 79% 100%, 0% 100%);
        }

        .photo {
            border-radius: var(--br-sm-2);
            height: 90%;
            width: 68%;
            margin-left: 4rem;
            background-color: var(--color-black);
            transition: all .4s ease-in-out;
            img {
                width: 100%;
                height: 100%;
                /* object fit to the photo div and does not stretch afterwards */
                object-fit: cover;
                transition: all .4s ease-in-out;
                filter: grayscale(100%);
                &:hover {
                    filter: grayscale(0);
                }
            }
        }
    }

    .right-header {
        display: flex;
        flex-direction: column;
        justify-content: center;
        padding-right: 18rem;
        .name {
            font-size: 3rem;
            span {
                color: var(--color-secondary);
            }
        }
        p {
            margin: 1.5rem 0;
            line-height: 2rem;
        }
    }
}

/* download button styling */
.download-btn-container {
    display: flex;
    align-self: flex-start;
}

.download-btn {
    border-radius: 30px;
    color: inherit;
    font-weight: 600;
    position: relative;
    border: 1px solid var(--color-secondary);
    display: flex;
    align-self: flex-start;
    align-items: center;
    overflow: hidden;
    .btn-txt {
        padding: 0 2rem;
    }
    .btn-icon {
        background-color: var(--color-secondary);
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        padding: 1rem;
    }
    &::before {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        transform: translateX(100%);
        transition: all .4s ease-in-out;
        z-index: -1;
    }
    &:hover {
        &::before {
            width: 100%;
            height: 100%;
            background-color: var(--color-secondary);
            transform: translateX(0);
            transition: all .4s ease-in-out;
        }
    }
}